openapi: 3.0.3
info:
  title: WASAText API
  description: |
    This OpenAPI document describes the WASAText API.
  version: "0.1.0"
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: http://127.0.1:8080/api
    description: Local development server
security:
  - bearerAuth: []
tags:
  - name: login
    description: User login and session management
  - name: user
    description: User profile management
  - name: conversation
    description: Conversation retrieval and management
  - name: message
    description: Sending and managing messages within conversations
  - name: reaction
    description: Managing reactions to messages
  - name: group
    description: Group conversation management (metadata, participants)
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      type: object
      description: Error response
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Error code, usually an HTTP status code
          example: 404
        message:
          type: string
          description: Error message
          example: "User not found"
    User:
      type: object
      description: A user object representing an application user
      required:
        - id
        - username
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
          maximum: 18446744073709551615
          description: The unique identifier for the user
          example: 1
        username:
          type: string
          minLength: 3
          maxLength: 16
          pattern: '^[a-zA-Z0-9_]+$'
          description: The user’s display name
          example: Maria
        photo:
          $ref: '#/components/schemas/Image'
    Image:
      type: object
      required:
        - uuid
        - url
        - mimeType
      properties:
        uuid:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        url:
          type: string
          format: uri
          description: Public or presigned URL for the image
          example: http://example.com/image.png
        mimeType:
          type: string
          example: image/png
    Conversation:
      type: object
      description: A conversation or group chat entity
      required:
        - id
        - participants
        - isGroup
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
          maximum: 18446744073709551615
          description: The unique identifier for the conversation
          example: 1
        participants:
          type: array
          items:
            $ref: '#/components/schemas/User'
          description: Users participating in the conversation
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: Messages exchanged in the conversation
          minItems: 0
          maxItems: 1844674407370955161
        title:
          type: string
          minLength: 1
          maxLength: 16
          description: The conversation’s title or group name
          example: "Conversation 1"
        photo:
          $ref: '#/components/schemas/Image'
          description: Optional display photo for the conversation
        isGroup:
          type: boolean
          description: Indicates if the conversation is a group chat
          example: true
    Message:
      type: object
      description: A message within a conversation
      required:
        - id
        - text
        - timestamp
        - sentBy
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
          maximum: 18446744073709551615
          description: Unique identifier for the message
          example: 1
        text:
          type: string
          minLength: 0
          maxLength: 65536
          description: Text content of the message
          example: "Hello, world!"
        media:
          $ref: '#/components/schemas/Image'
          description: Optional image attached to the message
        timestamp:
          type: string
          format: date-time
          description: ISO8601 timestamp of when the message was sent
          example: "2025-05-03T12:34:56Z"
        receivedBy:
          type: array
          items:
            $ref: '#/components/schemas/User'
          description: Users who have received the message
        seenBy:
          type: array
          items:
            $ref: '#/components/schemas/User'
          description: Users who have viewed the message
        reactions:
          type: array
          items:
            $ref: '#/components/schemas/Reaction'
          description: Reactions applied to the message
          minItems: 0
          maxItems: 1000
        conversationId:
          type: integer
          format: int64
          minimum: 1
          maximum: 18446744073709551615
          description: Identifier of the conversation this message belongs to
          example: 1
    Reaction:
      type: object
      description: A reaction (emoji) to a message
      required:
        - content
        - sentBy
      properties:
        content:
          type: integer
          format: int64
          minimum: 1
          maximum: 3790
          description: The emoji code for the reaction
          example: 1
        sentBy:
          $ref: '#/components/schemas/User'
          description: The user who sent the reaction
    forwardMessageRequest:
      type: object
      description: Represents a request to forward a message from one conversation to another
      required:
        - fromConversationId
        - messageId
        - toConversationId
      properties:
        fromConversationId:
          type: integer
          format: int64
          example: 1
          description: The ID of the conversation from which the message should be forwarded
          minimum: 0
          maximum: 18446744073709551615
        messageId:
          type: integer
          format: int64
          example: 1
          description: The ID of the message that should be forwarded
          minimum: 0
          maximum: 18446744073709551615
        toConversationId:
          type: integer
          format: int64
          example: 1
          description: The ID of the conversation to which the message should be forwarded
          minimum: 0
          maximum: 18446744073709551615
paths:
  /session:
    post:
      tags:
        - login
      summary: Logs in the user
      description: |
        If the user does not exist, it will be created, and an identifier is returned.
        If the user exists, the user identifier is returned.
      operationId: doLogin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Maria
                  description: User's chosen display name
                  pattern: "^.*?$"
                  minLength: 3
                  maxLength: 16
              required:
                - name
      responses:
        '201':
          description: User log-in action successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    minimum: 1
                    maximum: 18446744073709551615
                    description: The unique identifier for the user
                    example: 1
  /me/username:
    put:
      tags:
        - user
      summary: Sets the user name
      description: Sets the user name
      operationId: setMyUserName
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Maria
                  description: New display name for the user
                  minLength: 3
                  maxLength: 16
              required:
                - name
      responses:
        '200':
          description: User name set successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid user name (violates length or format)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized – authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden – cannot change another user's name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /me/photo:
    put:
      tags:
        - user
      summary: Sets the user photo
      operationId: setMyPhoto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
      responses:
        '200':
          description: User photo set successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request – malformed image data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized – authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /conversations:
    get:
      tags:
        - conversation
      summary: Retrieves all conversations for the user
      operationId: getMyConversations
      responses:
        '200':
          description: List of user's conversations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Conversation'
        '404':
          description: No conversations found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized – authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /conversations/{conversationId}:
    parameters:
      - name: conversationId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
          maximum: 18446744073709551615
          example: 1
    get:
      tags:
        - conversation
      summary: Retrieves a specific conversation
      operationId: getConversation
      responses:
        '200':
          description: Conversation retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
        '400':
          description: Bad Request – invalid conversationId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized – authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden – not a participant in this conversation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Conversation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /conversations/{conversationId}/messages:
    parameters:
      - name: conversationId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
          maximum: 18446744073709551615
          example: 1
    post:
      tags:
        - message
      summary: Sends a message to a conversation
      operationId: sendMessage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  example: Hello, world!
                  description: The message text
                  minLength: 1
                  maxLength: 65536
                media:
                  $ref: '#/components/schemas/Image'
                  description: Optional image to attach to the message
              required:
                - text
      responses:
        '201':
          description: Message sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Bad Request – missing or empty "text" field
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized – authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden – not a participant in this conversation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /conversations/{conversationId}/messages/{messageId}/reactions:
    parameters:
      - name: conversationId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
          maximum: 18446744073709551615
          example: 1
      - name: messageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
          maximum: 18446744073709551615
          example: 1
    put:
      tags:
        - reaction
      summary: Adds or updates a reaction to a message
      description: Adds a reaction if none exists from the user, or updates the existing one.
      operationId: commentMessage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reaction'
      responses:
        '201':
          description: Reaction added or updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Bad Request – invalid reaction payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized – authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden – not allowed to react in this conversation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Message not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - reaction
      summary: Removes a reaction from a message
      operationId: uncommentMessage
      responses:
        '204':
          description: Reaction removed successfully
        '400':
          description: Bad Request – nothing to remove or malformed request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized – authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden – not allowed to remove this reaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Reaction or message not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /conversations/{conversationId}/messages/{messageId}:
    parameters:
      - name: conversationId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
          maximum: 18446744073709551615
          example: 1
      - name: messageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
          maximum: 18446744073709551615
          example: 1
    delete:
      tags:
        - message
      summary: Deletes a message
      operationId: deleteMessage
      responses:
        '204':
          description: Message deleted successfully
        '401':
          description: Unauthorized – authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden – not allowed to delete this message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Message not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /conversations/{conversationId}/name:
    parameters:
      - name: conversationId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
          maximum: 18446744073709551615
          example: 1
    put:
      tags:
        - group
      summary: Sets the group name
      operationId: setGroupName
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Group 1
                  description: New name for the group
                  minLength: 1
                  maxLength: 16
              required:
                - name
      responses:
        '200':
          description: Group name set successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
        '400':
          description: Bad Request – invalid "name" (too long/short)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized – authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden – conversation is not a group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Group not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /conversations/{conversationId}/photo:
    parameters:
      - name: conversationId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
          maximum: 18446744073709551615
          example: 1
    put:
      tags:
        - group
      summary: Sets the group photo
      operationId: setGroupPhoto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
      responses:
        '200':
          description: Group photo set successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
        '400':
          description: Bad Request – malformed image data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized – authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden – conversation is not a group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Group not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /conversations/{conversationId}/participants:
    parameters:
      - name: conversationId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
          maximum: 18446744073709551615
          example: 1
    put:
      tags:
        - group
      summary: Adds participants to a group
      operationId: addToGroup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Participants added successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Bad Request – invalid user list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized – authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden – conversation is not a group or user(s) already in the group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Some user(s) not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - group
      summary: Leaves a group
      operationId: leaveGroup
      responses:
        '204':
          description: User left the group successfully
        '400':
          description: Bad Request – you're not in this group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized – authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden – cannot remove yourself in this manner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Group not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /conversations/{conversationId}/messages/{messageId}/forward:
    parameters:
      - name: conversationId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
          maximum: 18446744073709551615
          example: 1
      - name: messageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
          maximum: 18446744073709551615
          example: 1
    post:
      tags:
        - message
      summary: Forwards a message to another conversation
      operationId: forwardMessage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/forwardMessageRequest'
      responses:
        '200':
          description: Message forwarded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Bad Request – invalid forward request or message not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized – authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden – not allowed to forward this message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Conversation, message, or user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
