openapi: 3.0.3
info:
  title: WASAText API
  description: |
    This OpenAPI document describes the WASAText API.
  version: "0.1.0"
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: http://127.0.1:8080/api/v1
    description: Local development server
security:
  - bearerAuth: []
tags:
  - name: login
    description: User login and session management
  - name: user
    description: User profile management
  - name: conversation
    description: Conversation retrieval and management
  - name: message
    description: Sending and managing messages within conversations
  - name: reaction
    description: Managing reactions to messages
  - name: group
    description: Group conversation management (metadata, participants)
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: |
        Use the user ID as the bearer token.
        Example: `Authorization: 12345`
      bearerFormat: userId

  responses:
    BadRequest:
      description: Bad Request - The request was invalid or malformed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            invalidData:
              value:
                code: 400
                message: "Invalid request data"
    
    Unauthorized:
      description: Unauthorized - Authentication is required or has failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            unauthorized:
              value:
                code: 401
                message: "Authentication required"
    
    Forbidden:
      description: Forbidden - The request is understood but access is denied
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            forbidden:
              value:
                code: 403
                message: "Access denied"
    
    NotFound:
      description: Not Found - The requested resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            notFound:
              value:
                code: 404
                message: "Resource not found"
    
    InternalServerError:
      description: Internal Server Error - An unexpected error occurred
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            serverError:
              value:
                code: 500
                message: "Internal server error"

  schemas:

    ErrorResponse:
      type: object
      description: Error response
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Error code, usually an HTTP status code
          example: 404
        message:
          type: string
          description: Error message
          example: "User not found"

    ImageReference:
      type: object
      description: Reference to an image file
      required:
      - uuid
      properties:
        uuid:
          type: string
          format: uuid
          description: The UUID reference to the image file
          example: "550e8400-e29b-41d4-a716-446655440000"
          minLength: 36
          maxLength: 36
          pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'

    PublicUser:
      type: object
      description: A user object representing a public user profile
      required:
        - username
      properties:
        username:
          type: string
          description: The user’s display name
          example: Maria
          minLength: 3
          maxLength: 16
          pattern: '^[a-zA-Z0-9_]+$'
        photo:
          $ref: '#/components/schemas/ImageReference'
    
    PrivateUser:
      allOf:
        - $ref: '#/components/schemas/PublicUser'
        - type: object
          description: An internal user object
          required:
            - id
          properties:
            id:
              type: integer
              format: int64
              description: Database‐generated user ID
              example: 1
              maximum: 9223372036854775807
              minimum: 1

    Conversation:
      type: object
      description: A conversation object representing a chat or group conversation
      required:
        - id
        - title
        - participants
        - isGroup
        - messages
      properties:
        id:
          type: integer
          format: int64
          description: Database-generated ID
          example: 1
          readOnly: true             # ← only here
        title:
          type: string
          description: The conversation’s title or group name
          example: "Conversation 1"
          pattern: '^[a-zA-Z0-9_ ]+$'
          minLength: 1
          maxLength: 16
        participants:
          type: array
          description: Users participating
          items:
            $ref: '#/components/schemas/PublicUser'
          minItems: 1
          maxItems: 1000
        isGroup:
          type: boolean
          description: Indicates if the conversation is a group chat
          example: true
        messages:
          type: array
          description: Messages exchanged
          items:
            $ref: '#/components/schemas/Message'
          minItems: 0
          maxItems: 1000000
        photo:
          $ref: '#/components/schemas/ImageReference'
    
    ConversationPrototype:
      type: object
      description: A prototype for creating a new conversation
      allOf:
        - type: object
          properties:
            title:
              $ref: '#/components/schemas/Conversation/properties/title'
            participants:
              $ref: '#/components/schemas/Conversation/properties/participants'
            isGroup:
              $ref: '#/components/schemas/Conversation/properties/isGroup'
            photo:
              $ref: '#/components/schemas/Conversation/properties/photo'
          required:
            - participants
            - isGroup
            
    Message:
      type: object
      description: A message within a conversation
      required:
        - id
        - text
        - timestamp
        - sentBy
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the message
          example: 1
        text:
          type: string
          description: Text content of the message
          example: "Hello, world!"
          pattern: '^[\s\S]*$' # Allows any character including whitespace
          minLength: 0
          maxLength: 65536
        media:
            $ref: '#/components/schemas/ImageReference'
        timestamp:
          type: string
          format: date-time
          description: ISO8601 timestamp of when the message was sent
          example: "2025-05-03T12:34:56Z"
          minLength: 20
          maxLength: 20
        receivedBy:
          type: array
          description: Users who have received the message
          items: 
            $ref: '#/components/schemas/PublicUser'
          minItems: 0
          maxItems: 1000
        seenBy:
          type: array
          description: Users who have viewed the message
          items:
            $ref: '#/components/schemas/PublicUser'
          minItems: 0
          maxItems: 1000
        reactions:
          type: array
          description: Reactions applied to the message
          items:
            $ref: '#/components/schemas/Reaction'
          minItems: 0
          maxItems: 1000
        conversationId:
          type: integer
          format: int64
          description: Identifier of the conversation this message belongs to
          example: 1
        sentBy:
          $ref: '#/components/schemas/PublicUser'

    Reaction:
      type: object
      description: A reaction (emoji) to a message
      required:
        - content
        - sentBy
      properties:
        content:
          type: integer
          format: int64
          description: The emoji code for the reaction
          example: 1
        sentBy:
          $ref: '#/components/schemas/PublicUser'

    ForwardMessageRequest:
      type: object
      description: Represents a request to forward a message
      required:
        - toConversationId
      properties:
        toConversationId:
          type: integer
          format: int64
          description: Target conversation ID to forward the message to
          example: 2

paths:
  /session:
    post:
      tags:
        - login
      summary: Log in or create a user
      description: If the user does not exist, it will be created.
      operationId: doLogin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicUser'
      responses:
        '201':
          description: User log-in action successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateUser'
              examples:
                success:
                  value:
                    id: 1
                    username: "Maria"
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /upload:
    post:
      tags:
        - login
      summary: Upload an image
      description: Uploads an image and returns its UUID reference.
      operationId: uploadImage
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              description: Request body containing the image file
              type: object
              properties:
                imageFile:
                  type: string
                  format: binary
                  description: The image file to upload
                  minLength: 1
                  maxLength:  10485760 # 10 MB
              required:
                - imageFile
      responses:
        '201':
          description: Image uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageReference'
              examples:
                success:
                  value:
                    uuid: "550e8400-e29b-41d4-a716-446655440000"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /me/username:
    put:
      tags:
        - user
      summary: Change your username
      description: Sets the user’s display name.
      operationId: setMyUserName
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request body containing the new username
              type: object
              properties:
                name:
                  type: string
                  description: New display name
                  example: Maria
                  minLength: 3
                  maxLength: 16
                  pattern: '^[a-zA-Z0-9_]+$'
              required:
                - name
      responses:
        '200':
          description: Username updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateUser'
              examples:
                success:
                  value:
                    id: 1
                    username: "Maria"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /me/photo:
    put:
      tags:
        - user
      summary: Change your photo
      description: Sets the user’s profile photo.
      operationId: setMyPhoto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request body containing the image UUID reference
              properties:
                image:
                  $ref: '#/components/schemas/ImageReference'
              required:
                - image
      responses:
        '200':
          description: Photo updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateUser'
              examples:
                success:
                  value:
                    id: 1
                    username: "Maria"
                    photo:
                      uuid: "550e8400-e29b-41d4-a716-446655440000"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /conversations:
    get:
      tags:
        - conversation
      summary: List all conversations
      description: Retrieves all conversations for the authenticated user.
      operationId: getMyConversations
      responses:
        '200':
          description: List of user's conversations
          content:
            application/json:
              schema:
                description: Response containing a list of conversations
                type: object
                properties:
                  conversations:
                    description: List of conversations
                    type: array
                    items:
                      $ref: '#/components/schemas/Conversation'
                    minItems: 0
                    maxItems: 100000
              examples:
                success:
                  value:
                    conversations: []
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - conversation
      summary: Create a new conversation
      description: Creates a new conversation with the specified participants.
      operationId: createConversation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationPrototype'
            examples:
              success:
                value:
                  title: "Conversation 1"
                  participants:
                    - id: 1
                      username: "Maria"
                  isGroup: false
      responses:
        '201':
          description: Conversation created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
              examples:
                success:
                  value:
                    id: 1
                    title: "Conversation 1"
                    participants:
                      - id: 1
                        username: "Maria"
                    messages: []
                    isGroup: false
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /conversations/{conversationId}:
    parameters:
      - name: conversationId
        in: path
        required: true
        description: Conversation identifier
        schema:
          type: integer
          format: int64
          example: 1
    get:
      tags:
        - conversation
      summary: Get a conversation
      description: Retrieves a specific conversation by ID.
      operationId: getConversation
      responses:
        '200':
          description: Conversation retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
              examples:
                success:
                  value:
                    id: 1
                    title: "Conversation 1"
                    participants:
                      - id: 1
                        username: "Maria"
                    messages: []
                    isGroup: false
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /conversations/{conversationId}/messages:
    parameters:
      - name: conversationId
        in: path
        required: true
        description: Conversation identifier
        schema:
          type: integer
          format: int64
          example: 1
    post:
      tags:
        - message
      summary: Send a message
      description: Sends a new message to a conversation.
      operationId: sendMessage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request body containing the message text and optional media
              type: object
              properties:
                text:
                  type: string
                  description: Message text
                  example: Hello, world!
                  minLength: 1
                  maxLength: 65536
                  pattern: '^[\s\S]*$' # Allows any character including whitespace
                media:
                  $ref: '#/components/schemas/ImageReference'
              required:
                - text
      responses:
        '201':
          description: Message sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
              examples:
                success:
                  value:
                    id: 1
                    text: "Hello, world!"
                    timestamp: "2025-05-03T12:34:56Z"
                    sentBy:
                      id: 1
                      username: "Maria"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /conversations/{conversationId}/messages/{message_id}/reactions:
    parameters:
      - name: conversationId
        in: path
        required: true
        description: Conversation identifier
        schema:
          type: integer
          format: int64
      - name: message_id
        in: path
        required: true
        description: Message identifier
        schema:
          type: integer
          format: int64
    post:
      tags:
        - reaction
      summary: Add or update reaction
      description: Sets or updates the user’s reaction on a message.
      operationId: commentMessage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reaction'
      responses:
        '200':
          description: Reaction added/updated
          content:
            application/json:
              schema:
                description: Response containing the updated reactions list
                type: object
                properties:
                  reactions:
                    description: List of reactions to the message
                    type: array
                    items:
                      $ref: '#/components/schemas/Reaction'
                    minItems: 0
                    maxItems: 1000
              examples:
                success:
                  value:
                    reactions:
                      - content: 1
                        sentBy:
                          id: 1
                          username: "Maria"                  
                      
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - reaction
      summary: Remove reaction
      description: Deletes the user’s reaction from a message.
      operationId: uncommentMessage
      responses:
        '204':
          description: Reaction removed
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /conversations/{conversationId}/messages/{message_id}:
    parameters:
      - name: conversationId
        description: Conversation identifier to delete the message from
        in: path
        required: true
        schema:
          type: integer
      - name: message_id
        description: Message identifier to delete
        in: path
        required: true
        schema:
          type: integer
    delete:
      tags:
        - message
      summary: Delete a message
      description: Deletes a specific message.
      operationId: deleteMessage
      responses:
        '204':
          description: Message deleted
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /conversations/{conversationId}/name:
    parameters:
      - name: conversationId
        description: Conversation identifier to rename the group
        in: path
        required: true
        schema:
          type: integer
    put:
      tags:
        - group
      summary: Rename a group
      description: Sets the group conversation’s name.
      operationId: setGroupName
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request body containing the new group name
              properties:
                name:
                  type: string
                  description: New group name
                  example: Group 1
                  minLength: 1
                  maxLength: 16
                  pattern: '^[a-zA-Z0-9_ ]+$'
              required:
                - name
      responses:
        '200':
          description: Group renamed
          content:
            application/json:
              schema:
                type: string
                description: The new name of the group
              examples:
                success:
                  value: "Group 1"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /conversations/{conversationId}/photo:
    parameters:
      - name: conversationId
        description: Conversation identifier to change the photo
        in: path
        required: true
        schema:
          type: integer
    put:
      tags:
        - group
      summary: Change group photo
      description: Sets the group conversation’s display photo.
      operationId: setGroupPhoto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request body containing the image UUID reference
              properties:
                image:
                  $ref: '#/components/schemas/ImageReference'
              required:
                - image
      responses:
        '200':
          description: Group photo updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageReference'
              examples:
                success:
                  value:
                    uuid: "550e8400-e29b-41d4-a716-446655440000"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /conversations/{conversationId}/participants:
    parameters:
      - name: conversationId
        description: Conversation identifier to manage participants
        in: path
        required: true
        schema:
          type: integer
    post:
      tags:
        - group
      summary: Add participants
      description: Adds users to a group conversation.
      operationId: addToGroup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Request body containing the list of users to add
              type: object
              properties:
                participants:
                  type: array
                  description: Users to add
                  items:
                    $ref: '#/components/schemas/PublicUser'
                  minItems: 1
                  maxItems: 1000
              required:
                - participants
      responses:
        '204':
          description: Participants added successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - group
      summary: Leave group
      description: Current user leaves the group conversation.
      operationId: leaveGroup
      responses:
        '204':
          description: Left group successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /conversations/{conversationId}/messages/{message_id}/forward:
    parameters:
      - name: conversationId
        description: Conversation identifier to forward the message from
        in: path
        required: true
        schema:
          type: integer
      - name: message_id
        description: Message identifier to forward
        in: path
        required: true
        schema:
          type: integer
    post:
      tags:
        - message
      summary: Forward a message
      description: Forwards a message to another conversation.
      operationId: forwardMessage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForwardMessageRequest'
      responses:
        '200':
          description: Message forwarded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
              examples:
                success:
                  value:
                    id: 1
                    text: "Hello, world!"
                    timestamp: "2025-05-03T12:34:56Z"
                    sentBy:
                      id: 1
                      username: "Maria"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
