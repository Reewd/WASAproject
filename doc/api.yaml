openapi: 3.0.3
info:
  title: WASAText API
  description: |-
    This OpenAPI document describes the WASAText API.
  version: "1.0.0"
paths:
  /session:
    post:
      tags: ["login"]
      summary: Logs in the user
      description: |-
        If the user does not exist, it will be created,
        and an identifier is returned.
        If the user exists, the user identifier is returned.
      operationId: doLogin
      requestBody:
        description: User details
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Maria
                  pattern: 'ÀÜ.*?$'
                  minLength: 3
                  maxLength: 16
              required:
                - name
      responses:
        '201':
          description: User log-in action successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    minimum: 0
                    maximum: 9223372036854775807
                    example: 1
                  identifier:
                    type: string
                    example: "abcdef012345"
components:
  schemas:
    User:
      type: object
      description: "A user object"
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
          maximum: 9223372036854775807
          description: "The user ID"
          example: 1
        username:
          type: string
          description: "The user name"
          example: "Maria"
          maxLength: 16
          minLength: 3
        photo:
          $ref: "#/components/schemas/Image"
          description: "The user photo"
        conversations:
          type: array
          items:
            $ref: "#/components/schemas/Conversation"
          description: "The conversations the user is participating in"
          example: []

    Message:
      type: object
      description: "A message"
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
          maximum: 9223372036854775807
          description: "The message ID"
          example: 1
        text:
          type: string
          description: "The message text"
          example: "Hello, world!"
          maxLength: 65536
          minLength: 1
        media:
          type: string
          format: uri
          description: "The URL of the message media"
          example: "http://example.com/media.jpg"
        timestamp:
          type: string
          format: date-time
          description: "The timestamp of the message"
          example: "2020-01-01T00:00:00Z"
        sentBy:
          $ref: "#/components/schemas/User"
        receivedBy:
          type: array
          items:
            $ref: "#/components/schemas/User"
          description: "The users who have received the message"
          example: []
        seenBy:
          type: array
          items:
            $ref: "#/components/schemas/User"
          description: "The users who have seen the message"
          example: []
        reactions:
          type: array
          items:
            $ref: "#/components/schemas/Reaction"
          description: "The reactions to the message"
          example: []
        conversation:
          $ref: "#/components/schemas/Conversation"
    Conversation:
      type: object
      description: "A conversation object"
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
          maximum: 9223372036854775807
          description: "The conversation ID"
          example: 1
        participants:
          type: array
          items:
            $ref: "#/components/schemas/User"
          description: "The users who are participating in the conversation"
          example: []
        messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"
          description: "The messages in the conversation"
          example: []
        photo:
          $ref: "#/components/schemas/Image"
          description: "The conversation photo"
        title:
          type: string
          description: "The title of the conversation"
          pattern: "^[a-zA-Z0-9-üòÄ-üôè]+$"
          example: "Conversation 1"
    Reaction:
      type: object
      description: "A reaction to a message"
      properties:
        content:
          type: string
          description: "The emoji of a reaction"
          pattern: "^[üòÄ-üôè]$"
          example: "üòÑ"
          maxLength: 1
          minLength: 1
        sentBy:
          $ref: "#/components/schemas/User"
    Image:
      type: object
      properties:
        url:
          type: string
          format: uri
          description: "The URL of the image"
          example: "http://example.com/image.jpg"
        width:
          type: integer
          description: "The width of the image in pixels"
          example: 800
        height:
          type: integer
          description: "The height of the image in pixels"
          example: 600
        size:
          type: integer
          description: "The size of the image in bytes"
          example: 102400
        uuid:
          type: string
          description: "The UUID of the image"
          example: "550e8400-e29b-41d4-a716-446655440000"
